<UserControl x:Class="Typerr.View.CreateTestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:fa="clr-namespace:Meziantou.WpfFontAwesome;assembly=Meziantou.WpfFontAwesome"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Typerr.View" 
             xmlns:viewmodel="clr-namespace:Typerr.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:CreateTestViewModel}"
             mc:Ignorable="d">
    <Grid Background="White">
        <Grid.Resources>
            <Style TargetType="Button">
                <Setter Property="Padding" Value="5"/>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="Margin" Value="10 10 10 0"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="10 10 10 0"/>
                </Style>
                
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" 
                   Content="Create a New Test"
                   FontWeight="Bold"
                   FontSize="24"
                   />
            <TextBox x:Name="TextAreaBox" 
                     TextWrapping="Wrap" 
                     AcceptsReturn="True" 
                     VerticalScrollBarVisibility="Auto" 
                     Padding="10"
                     Grid.Row="1"
                     MinHeight="400"
                     GotFocus="TextAreaBox_GotFocus"
                     LostFocus="TextAreaBox_LostFocus"
                     MinWidth="400"
                     Text="{Binding TextArea, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.ToolTip>
                    Paste a URL here to generate a test (Ctrl+V or from the Right-Click Menu)
                </TextBox.ToolTip>
            </TextBox>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="OpenFromFileButton" 
                        Grid.Column="0"
                        Content="Import from text file..." 
                        HorizontalAlignment="Left"
                        Margin="10"
                        Command="{Binding OpenFromFileCommand}"/>
                <Button x:Name="GetTestButton"
                        Grid.Column="2"
                        Content="Get Test" 
                        Margin="10"
                        Command="{Binding GetTestCommand}"
                        IsEnabled="{Binding GetTestButtonEnabled, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Grid>
        <Grid Grid.Column="1">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="Margin" Value="0 0 10 0"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="0 0 10 0"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="AcceptsReturn" Value="True"/>
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="46"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            
            
            <Button x:Name="CreateTestClose" 
                    Grid.Row="0"
                    HorizontalAlignment="Right"
                    BorderThickness="0" 
                    Width="46" 
                    Background="Transparent"
                    Command="{Binding CreateTestCloseCommand}"
                    >
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="wButton" 
                                                Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" 
                                                     Value="True">
                                            <Setter Property="Background" 
                                                        Value="#eee" 
                                                        TargetName="wButton" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" 
                                                     Value="True">
                                            <Setter Property="Background"
                                                        Value="#ddd" 
                                                        TargetName="wButton" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                <fa:FontAwesomeIcon SolidIcon="Times" 
                                    Foreground="Gray" 
                                    FontSize="19"/>
            </Button>
            <ScrollViewer Grid.Row = "1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="Title"
                               Grid.Column="0"
                               Margin="0"
                           Foreground="{Binding ForegroundColor}"
                       IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="*"
                               Grid.Column="1"
                               Margin="-7 0 0 0"
                               Foreground="{Binding DeleteForeground}"/>
                    </Grid>
                    
                <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
                         Foreground="{Binding ForegroundColor}"
                         Height="80"
                         IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Author"
                       Foreground="{Binding ForegroundColor}"/>
                    <TextBox Text="{Binding Author, UpdateSourceTrigger=PropertyChanged}"
                         Foreground="{Binding ForegroundColor}"
                         Height="{Binding SingleRowHeight}"
                         IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Source"
                       Foreground="{Binding ForegroundColor}"
                       IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="{Binding Source, UpdateSourceTrigger=PropertyChanged}"
                         Foreground="{Binding ForegroundColor}"
                         Height="{Binding SingleRowHeight}"
                         IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Publish Date"
                       Foreground="{Binding ForegroundColor}"
                       IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                <DatePicker x:Name="PublishDatePicker" 
                            Foreground="{Binding ForegroundColor}"
                            SelectedDate="{Binding PublishDate}" 
                            Height="{Binding SingleRowHeight}"
                            Margin="0 0 10 0"
                            IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"
                            Padding="10"/>
                    <Label Content="Summary" 
                           Foreground="{Binding ForegroundColor}"
                           IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="{Binding Summary, UpdateSourceTrigger=PropertyChanged}"
                             Foreground="{Binding ForegroundColor}"
                             Height="120"
                             IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Image"
                       Foreground="{Binding ForegroundColor}"
                       IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                <Border Height="144"
                        BorderThickness="0.5"
                        BorderBrush="{Binding ForegroundColor}"
                        Margin="0 0 10 0"
                        IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Image Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}"
                       Stretch="UniformToFill"/>

                        <Button x:Name="ImageButton" 
                                Width="auto"
                                Height="auto"
                                OpacityMask="#222"
                                BorderThickness="0"
                                Command="{Binding AddImageCommand}">

                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    
                                    <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" 
                                                Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                                              VerticalAlignment="Center" />
                                            </Border>
                                            
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" 
                                                     Value="True">
                                                        <Setter Property="Background" 
                                                        Value="#bbfdfdfd" 
                                                        TargetName="Border" />

                                                    </Trigger>
                                                <Trigger Property="IsPressed" 
                                                     Value="True">
                                                    <Setter Property="Background" 
                                                        Value="#a8aaaaaa" 
                                                        TargetName="Border" />
                                                </Trigger>
                                                    
                                                </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Content" 
                                                    Value="{Binding UploadImagePrompt, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                        </Button.Style>

                            <Button.Background>
                                <LinearGradientBrush StartPoint="2,0" 
                                             EndPoint="2,6">
                                    <GradientStop Color="Transparent" 
                                          Offset="0.0"/>
                                    <GradientStop Color="#fdfdfd" 
                                          Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>

                        </Button>
                    </Grid>
                </Border>
                <TextBlock>
                <Hyperlink NavigateUri="" 
                           Foreground="{Binding DeleteForeground}" 
                           Command="{Binding RemoveImageCommand}"
                           IsEnabled="{Binding SidebarEnabled, UpdateSourceTrigger=PropertyChanged}">
                    Delete picture</Hyperlink>
                    </TextBlock>
            </StackPanel>
            </ScrollViewer>
            <Button Grid.Row="2"
                    Content="Create Test" 
                    HorizontalAlignment="Right"
                    Margin="10"
                    Command="{Binding CreateCommand}"
                    IsEnabled="{Binding CreateButtonEnabled, UpdateSourceTrigger=PropertyChanged}">
            </Button>
        </Grid>
    </Grid>
</UserControl>
